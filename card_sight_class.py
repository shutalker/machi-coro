from card_base_class import BaseCard


class SightCard(BaseCard):

    '''
       Класс карт достопримечательностей. Все карты достопримечательностей
       изначально имеются на руках каждого игрока, однако чтобы активировать
       эффекты карт, их необходимо построить (флаг is_built определяет,
       является ли данная достопримечательнось построенной). Эффекты этих карт
       срабатывают не только на фазе доходов, но и в другие моменты игрового
       процесса (напрмер, перед броском кубиков игрок может решить, будет ли
       он бросать 1 или 2 кубика, если у него открыта карта "Вокзал")
    '''

    def __init__(self, card_properties, player_id):

        '''
           Для данного типа карт эффекты срабатывают вне зависимости от того,
           какое количество очков выкинул игрок, т.е. стоимость срабатывания
           эффекта карты (effect_cost из базового класса) равна нулю (None).
           effect_name неоходимо для вызова эффекта, который предоставляется
           данной картой
        '''

        super().__init__(card_properties, player_id)

        self.is_built = False
        self.effect_name = card_properties['effect_name']
        self.effect_cost = None

    def card_effect(self, *args, **kwargs):

        '''
           Функция-диспетчер. Функция, которая будет выбрана для вызова,
           определяется именем карты.
           В *args хранятся аргументы конкретного метода эффекта карты. Например,
           для карты "Вокзал" - это дескриптор сокета, через который сервер будет
           общаться с клиентом, опрашивая его, сколько кубиков тот желает бросать 
        '''

        sight_effect_name = 'card_effect_'
        sight_effect_name += self.effect_name
        sight_effect = getattr(self, sight_effect_name)
        return sight_effect(*args, **kwargs)

    def card_effect_railway_station(*args, **kwargs):

        '''
           Карта "Вокзал": позволяет игроку бросать 1 или 2 кубика.
           Дописать диалог с клиентом с запросом на количество кубиков для
           броска
        '''

        dice_amount = 1

        # опрос клиента, изменение значение dice_amount

        return dice_amount

    def card_effect_seaport(*args, **kwargs):

        '''
            Карта "Порт": позволяет игроку увеличить на 2 количество очков,
            выброшенных им, если текущее суммарное количество == 10.
            Дописать диалог с клиентом с запросом на увеличение в случае
            положительного ответа
        '''

        dice_score = args[0]

        # if dice_score == 10:
        # опрос клиента, изменние значение dice_score

        return dice_score

    def card_effect_airport(*args, **kwargs):

        '''
           Карта "Аэропорт": если игрок отказывается от строительства, то он
           получает 10 монет
           В качестве параметра функция получает список игроков, из которого
           выцепляет текущего игрока и увеличивает его банк
        '''

        player = kwargs[self.id]
        player.bank += 10

    def card_effect_radio_station(*args, **kwargs):

        '''
           Карта "Радиовышка": позволяет перебросить 1 кубик 1 раз в ход
        '''

        # 0 означает, что кубик не перебрасывается, иначе возвращается номер
        # кубика, который будет переброшен
        dice_idx = 0
        # опрос клиента, выбор кубика, который будет переброшен

        return dice_idx
